{
  "title": "Election voting using a mobile app",
  "description": "You live in a democratic country where voting has been traditionally done using paper ballots. In the not too distant future, a generation arises that feels the time has come to dispense with paper ballots and believes that secure voting can be done using an app on a mobile device. This generation has come to realize that since the majority of people use mobile banking and no one has ever had their account hacked, it would stand to reason that if mobile banking is secure and you trust the bank to protect your money, it should be possible to use a mobile app that is likewise safe and secure.\\n\\nThe reasons for wanting to go mobile when casting a ballot include the following:\\n\\n* No need for humans to count votes.\\n* The voting results are virtually instantaneously known.\\n* Voters can vote on a large number of issues directly, both locally, state-wide and nationally.\\n* The same app can be used periodically by the public to vote on key issues directly such as during a crisis and the overwhelming population wants new elections.\\n* There is no need to have polling stations where long lines can form or where the gathering of large groups could potentially be unsafe, such as during a pandemic.\\n* Weather and other environmental factors will have little or no effect on voter turnout, since voting is done from an app.\\n* A large amount of demographic data will be instantly available to anyone on the voting results such as votes per gender, age group, race, location, income, etc.\\n\\nAs an elected politician who campaigned on introducing mobile voting, your challenge is to determine how the system will be implemented and how safe and secure it will be. With little to no background in technology, this becomes an even greater challenge.",
  "discussionUrl": "https://www.reddit.com/r/CriticalThinkn/comments/1d9gox5/election_voting_using_a_mobile_app/",
  "solution": "As a politician who lacks a technical background, some would just resort to hiring a bunch of Ph.D computer and software engineers to figure it out. But being a critical thinker, you decide to take a more hands-on approach and where you lack knowledge in something you will learn along the way. Nevertheless, you do decide to bring in several Ph.D experts in the field of computer science who have extensive experience in the banking industry who will determine the tasks that need to be completed and whether additional professional support outside of their expertise is required.\\n\\nYour team of experts has provided the following tasks that need to be covered:\\n\\n1. To determine what encryption mechanisms will be used to secure the transmission of data.\\n2. Proving that a voter is a real person, alive, a citizen of the country, and is legally allowed to vote.\\n3. Proving that the mobile device that they cast their vote from is really their device and that the real person is using the device at the time they cast their vote.\\n4. Deciding who operates the voting servers.\\n5. To determine whether the source code for the app and backend servers is open source or closed to the public.\\n6. To determine who writes the code for the app and backend servers.\\n7. To determine who verifies the code that it is free from bugs, security flaws and backdoors that would allow hackers to access either the app or the backend servers.\\n8. Deciding how the app will be distributed to citizens.\\n9. A way to prevent or significantly reduce the likelihood that any malware running on the device is capable of interfering with the app or accessing its data.\\n10. A way to prove that the vote received on the voting servers could only have originated from the real person using their actual device.\\n11. A way to detect and prevent any attack on the system during voting.\\n12. A way to verify the number of invalid votes and determine what action to take if the number would cause the final results to change.\\n13. An alternative to a smartphone.\\n\\nWhile this is not an exhaustive list of things that need to be covered, these are the most important points. Because technologies continue to advance every year, providing a concrete solution for each of the above points is not as meaningful as taking the correct step for each of them. So, keeping with the focus on critical thinking, the following steps would be taken. Only when all of them have been evaluated collectively, is it possible to know more accurately whether a mobile voting system can be done securely and reliably.\\n\\n**Encryption**\\n\\nThere are many different encryption protocols available and no doubt more will evolve over time. But one particular type of encryption is known as end-to-end encryption, or ETEE. Using ETEE means that data is sent directly between two computers without any computers between the two acting as a mediator. A VPN (Virtual Private Network) is an encryption method where a computer acts as a middle man. While VPNs are typically safe, they cannot be 100% trusted. Even without any middleman computers, the Internet in general is made up of millions of these middlemen who are responsible for getting your data from one device to another, so in effect, the Internet in general is not safe. However, if the data can be well encrypted at one end and sent to its destination without any VPN middlemen, then it becomes extremely difficult for anyone to intercept the data and decrypt it. The encryption protocol known as Signal is one such mechanism and is used in WhatsApp and Facebook Messenger, making it extremely difficult for even Facebook to access user messages.\\n\\nWhile there is talk about future quantum computers being able to easily and quickly decrypt data, it should also be noted that when such computers do arise, new algorithms will also be developed for quantum computers to prevent other quantum computers from decrypting the data.\\n\\nIn summary: End-to-end encryption can be used to safely secure the data between a mobile device and a voting server.\\n\\n**Identity**\\n\\nIn order to prove someone's identity whenever they use the voting app, they would be required to come into a government office within 8 weeks of an election. They would be required to bring their ID card proving that they are a citizen. They must also bring one or more mobile devices that they want to have registered. . Bringing multiple devices is for safety purposes in the event that one device doesn't work or later on gets lost or stolen. Each device must be equipped with a retinal eye scanner. When their identity has been verified, the person  then uses their device to scan their eye using the voting app. They must do this in the government office. The app will then transmit this to the government servers. At this point, the person's identity is known and the devices they plan on using are registered for their use. It is not possible for anyone else to use the device for voting unless the app is uninstalled or a hard reset is done on the device. The eye scan also acts as an unlock mechanism for the app. No passwords will be supported.\\n\\n**Servers**\\n\\nThe servers that handle voting data must be highly secured. They must be operated on secured property owned by the government and have the highest level of security systems and procedures in place that limits who has access to the facility. The level of security should be equal to if not higher than guarding a gold vault in Fort Knox which includes armed guards with orders to kill trespassers. The only people ever allowed to work at these facilities are naturally born citizens who have passed extensive background checks. Excluding nuclear missile launch sites, these facilities must be considered the most secured in the country. A country can survive a nuclear power plant meltdown. It may not survive a collapse of democracy that could lead to a civil war. While the servers can be powered from the public electrical grid, there must be generator backups that can sustain the system for days. There should not be just one facility but a dozen or more located around the country in low populated areas, which would make it easier to spot intruders at a distance.\\n\\n**Software Development**\\n\\nTransparency is vital to ensuring a true democracy. For this reason, the source code for both the app and the servers must be open source. This will also allow the public to scrutinize the software for potential bugs and security flaws. Any software developer can download the source code and compile it and compare the binary they generate to the ones published by the government. If there is any difference, then it probably means that someone in the government is using a different version of the source code which should raise suspicion that the voting app is being tampered with.  Even though the software is open source, it is vital that it be developed entirely at a government facility and preferably at the server facility. This includes the code for the mobile app as well. The reason for developing the code at a server facility is because testing needs to be carried out between the mobile app and the server and by limiting the network between the two to one that is private and secure and has no connection to the Internet, there is little chance of some hacker infiltrating the development environment and replacing executable binaries with ones that contain malware. Only those that are naturally born citizens can be allowed to work on the software and hardware. Verification of the software must be done by a third party, non-government organization. Because the software is open source, there is no need for them to be on site. However, the employees that do the verification must be naturally born citizens.\\n\\n**App Distribution**\\n\\nNormally apps are distributed from an app store like Google Play or Apple's App Store. But these companies act like middlemen. This makes them vulnerable to hackers gaining access to the app binaries and replacing them with ones that contain spyware or malware that can potentially affect the voting app. For this reason, the mobile app needs to be hosted on government run servers and preferably at the same facilities where the backend servers are used for processing voting data. By keeping the source code, software development, app distribution and servers all within the same guarded facilities, the risk of a hacker breach is significantly reduced. Allowing users to download the app directly from a government server should not be allowed because the transmission of the app is vulnerable to middlemen lurking on servers across the Internet that are used to transport the app to the user. Instead, when someone comes to the government office to register their device, it is during this visit that the app is installed over a local and secure wireless network. Should the person later on delete the app on their device, they will have to return back to the government office to get it reinstalled. The app will never be allowed to be installed on a device that has been rooted, which is a process that strips off all the security limits allowing any app to do whatever it wants with the device.\\n\\n**Dealing with Malware**\\n\\nGoogle's Android operating system and Apple's iOS have proven after 15 years of evolution, including more stricter security measures, that using these operating systems for mobile banking is safe and secure. Even though malware and spyware still exists, apps operate in a sandbox that isolates them from access by other apps and processes on the device. Even if a malware manages to take advantage of a security flaw, the backend servers have multiple barriers that need to be overcome and any attempt at hacking the system will almost certainly be detected. Many, if not most banking apps, require some form of communication over a mobile network instead of the Internet as part of authentication. This often includes the need for the user to verify a code that is only sent by SMS.\\n\\nGoogle and Apple both employ malware detection on their distribution servers to periodically scan apps for viruses and other malware. If detected, it is possible for Google or Apple to either install a patch on every device, disable the malware, disable apps affected by the malware or even uninstall those apps that are affected. Because the voting app would be distributed from government servers, a collaboration between the government and Google and Apple would be required. The voting app would be installed in the app stores but not be made available to the public. They get scanned for malware whenever they run their scanning software on all the other apps. Should malware be detected, the government would be notified about the severity. If the government decides that the malware is severe enough, they could request Google and Apple to remove the app from all devices and then require all users to visit a government office to obtain the updated version. For less severe malware or where security flaws are discovered, the government could just create a fix using what is referred to as a patch and send this directly to the device without requiring the user to visit the government office. A patch only requires a small portion of the app to be updated rather than the entire app, so sending this patch over the Internet should be a very minor risk worth taking.\\n\\n**Verification Using the App**\\n\\nWhenever someone uses the voting app, it is crucial that the true identity of the user be verified. Many banking apps today will often require the user to take a photo of themselves and then compare this with the photo on a government authorized document such as an ID card or passport. While this is a safe approach, it isn't foolproof.  For this reason, a retinal eye scan needs to be done when the app is opened and whenever the user needs to make a critical action such as placing their vote. Using video to verify someone should be avoided as it is possible to obtain videos of people and use AI to create deepfakes that could pass the person off as being the real person. Retinal scans are extremely difficult to hack.\\n\\n**Dealing with System Attacks**\\n\\nServers and networks have evolved over the past many decades to the point that it is very difficult for some malware or hacker to successfully assault a major website or Internet service and cause major disruption or damage. While this does happen from time to time, it is almost always the result of some organization failing to implement proper safeguards to detect and inhibit these kinds of attacks. A Denial-of-Service (or DOS) attack is one type of assault that a malware can execute by sending a vast number of requests to the servers in the hopes of overloading it resulting in it either crashing or becoming extremely slow to service normal users. This would certainly be a favorite attack during an election. One approach to avoid this is to give every voter a designated voting time period in which they can vote. This could be a two hour time period on certain dates. Because voting can be held over several days, everyone would have multiple time periods in which they could cast their vote in the event that they are not available during one of the designated time periods. If a malware attempts to execute a DOS attack against the voting servers, even though the IP address can be faked on every request, the request received by the server must include the retinal verification which identifies the person and device they are using. If this identification doesn't match up with the voting time period, the request would be ignored. And because there are a dozen or more server facilities hosting the voting servers, the incoming requests would be distributed evenly across all of them further preventing any one facility alone from bearing a heavy attack.\\n\\n**Verifying Votes**\\n\\nNo matter how secure the mobile voting system is, it is bound to happen that some votes are invalid. This could be for example the result of a software bug, a hardware failure, some problem on a voter's device or even the voter making a mistake and making the wrong choice. Even paper ballots come with their own set of potential problems. The goal of the mobile voting system however is to significantly reduce the likelihood of problems.\\n\\nTo be certain that the final voting results are valid, there can only be so much error allowed. If the amount of errors isn't enough to change the voting results, then the errors can be ignored. But if the number could potentially alter the results in a way that would affect the people getting elected, or laws being passed, then action needs to be taken to correct the mistakes. One way to achieve this is to send a letter by mail to the voter containing a code. The user then visits the government voting site and enters the code. Their voting choices will be displayed while keeping their identity hidden on the web page. They can then compare their voting choices on the web page to the one in the voting app and if they don't match, they can update their choice using the website. They must use the website and not their mobile app because if their app has been hacked and compromised, then any attempts to update their voting choice might fail.\\n\\nChanging a vote can only be done within days. Once the backend has received all the votes, it then compares the votes to the changes and if the number of changes would affect the election results in a way that would change the number of seats a party gets or whether some other politician wins or some law passes or does not pass, then the voting needs to be repeated, but only after the changes have been investigated and the reasons for why the discrepancies arose are dealt with and prevented from happening again.\\n\\n**An Alternative to a Smartphone**\\n\\nEven though smartphones today are secure enough for mobile banking, the constant updates to deal with security flaws both in the voting app and the operating system gives rise to the question of whether an alternative to smartphones can be used. One solution would be to use a custom smartphone developed entirely by the government. This device however would have significant differences from a regular smartphone. The operating system would be custom developed but still remain open source. As a custom operating system, it would be significantly simpler and scaled down from the massive operating systems that Google and Apple offer. Another feature is that these devices would never allow any apps to be installed. They come pre shipped with the voting app but are capable of being updated over the Internet. There would not be Bluetooth or any other communication interfaces. Starting the device would require a retinal scan. While it could support SMS messages, the hardware would be hardwired to only communicate with a government server. It would not be possible to send or receive text messages from anyone else. To keep costs down, citizens would pay a fee that basically covers the cost of producing the device. This is unlike Samsung or Apple who sell their phones to make a significant profit.\\n\\nWhile the overall cost of developing and maintaining these devices will be significantly higher than using publicly available devices, the security it offers would be the highest that could be achieved, ensuring that a country's democracy is safeguarded. And what price can you put on that?",
  "author": {
    "id": "johannrosenberg",
    "name": "Johann Rosenberg",
    "bio": "Software developer that specializes in Android and web development. Have been developing software applications since the mid 1980s and wrote my first program using a punch card on mainframe computer. Born and raised in Canada, I have lived in Israel and now reside in Germany.",
    "photo": "johann.jpg",
    "url1": "https://github.com/JohannRosenberg",
    "url2": "https://www.linkedin.com/in/johannrosenberg/"
  },
  "level": "hard"
}